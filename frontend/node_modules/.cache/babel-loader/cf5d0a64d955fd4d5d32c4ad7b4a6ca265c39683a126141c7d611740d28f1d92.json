{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_freebie\\\\working\\\\src\\\\components\\\\Maincomponent.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport DataContext from '../context/DataContext';\n//import Modal from './Modal';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Maincomponent() {\n  _s();\n  //const [openModal, setOpenModal] = useState(false);\n  const [divs, setDivs] = useState([]);\n  const {\n    datatext\n  } = useContext(DataContext);\n  console.log('test: ', datatext);\n  useEffect(() => {\n    console.log('datatext in useEffect: ', datatext);\n    console.log('Current divs: ', divs);\n    if (datatext && !divs.find(div => div.description === datatext.description && div.contactno === datatext.contactno)) {\n      setDivs(prevDivs => [...prevDivs, {\n        id: prevDivs.length + 1,\n        description: datatext.description,\n        contactno: datatext.contactno\n      }]);\n    }\n  }, [datatext]); // Only listen to changes in datatext\n\n  // const CreateDiv =(data)=>{\n  //   setDivs((prevDivs) => [...prevDivs, {id: prevDivs.length+1, description : data.description, contactno: data.contactno }])\n\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        children: divs.map(div => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cont-data\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uname\",\n                children: div.contactno\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"desc\",\n                children: div.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 49\n          }, this)\n        }, div.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Maincomponent, \"AA8Hu4KBsVv4+GGAKOaEKGgAP/8=\");\n_c = Maincomponent;\n;\nvar _c;\n$RefreshReg$(_c, \"Maincomponent\");","map":{"version":3,"names":["React","useContext","useState","useEffect","DataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Maincomponent","_s","divs","setDivs","datatext","console","log","find","div","description","contactno","prevDivs","id","length","children","map","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project_freebie/working/src/components/Maincomponent.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport DataContext from '../context/DataContext';\r\n//import Modal from './Modal';\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default function Maincomponent() {\r\n  //const [openModal, setOpenModal] = useState(false);\r\n  const [divs, setDivs] = useState([]);\r\n  const {datatext} = useContext(DataContext);\r\n  console.log('test: ', datatext);\r\n\r\n  useEffect(() => {\r\n    console.log('datatext in useEffect: ', datatext);\r\n    console.log('Current divs: ', divs);\r\n\r\n    if (datatext && !divs.find((div) => div.description === datatext.description && div.contactno === datatext.contactno)) {\r\n      setDivs((prevDivs) => [\r\n        ...prevDivs,\r\n        { id: prevDivs.length + 1, description: datatext.description, contactno: datatext.contactno },\r\n      ]);\r\n    }\r\n}, [datatext]);  // Only listen to changes in datatext\r\n\r\n\r\n  // const CreateDiv =(data)=>{\r\n  //   setDivs((prevDivs) => [...prevDivs, {id: prevDivs.length+1, description : data.description, contactno: data.contactno }])\r\n    \r\n  // };\r\n  \r\n  return (\r\n    <>\r\n    <div  >\r\n    <div id = \"container\">\r\n      {divs.map((div)=>(\r\n        <div key={div.id} className='cont-data'><div className = \"content\">\r\n        <div className='photo' ></div> \r\n        <div className='text'> \r\n           <div className = 'uname'>{div.contactno}</div>\r\n           <div className='desc'>{div.description}</div>\r\n          <br></br>\r\n        </div>\r\n      </div></div>\r\n      ))}\r\n    </div> \r\n      \r\n       {/* <div className = \"content\"><div className='photo' ></div></div> */}\r\n      </div>\r\n      {/* <div >\r\n          <button className='add-item' onClick = {()=>{setOpenModal(true);}}><b>Add Item</b></button>\r\n      </div> */}\r\n\r\n  \r\n      \r\n    </>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}