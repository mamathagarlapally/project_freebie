{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_freebie\\\\working\\\\frontend\\\\src\\\\components\\\\PasswordModal.js\";\nimport React, { useState } from 'react';\nexport default function PasswordModal({\n  isOpen,\n  onClose,\n  onSubmit\n}) {\n  //const [prevPassword, setPrevPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  if (!isOpen) return null;\n  const handleSubmit = () => {\n    if (newPassword !== confirmPassword) {\n      setError(\"New passwords do not match!\");\n      return;\n    }\n    setError('');\n    // Pass data back to parent or handle submit here\n    onSubmit({\n      newPassword,\n      confirmPassword\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unique-overlaying\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unique-modal-pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, \"Change Password\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"New Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    className: \"unique-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"Confirm New Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    className: \"unique-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  })), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unique-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"unique-submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"unique-submit\",\n    onClick: onClose,\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Cancel\"))));\n}","map":{"version":3,"names":["React","useState","PasswordModal","isOpen","onClose","onSubmit","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","handleSubmit","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","style","color","onClick","marginLeft"],"sources":["D:/project_freebie/working/frontend/src/components/PasswordModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function PasswordModal({ isOpen, onClose, onSubmit }) {\r\n  //const [prevPassword, setPrevPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  \r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleSubmit = () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"New passwords do not match!\");\r\n      return;\r\n    }\r\n    setError('');\r\n    // Pass data back to parent or handle submit here\r\n    onSubmit({newPassword, confirmPassword });\r\n  };\r\n\r\n  return (\r\n    <div className=\"unique-overlaying\">\r\n  <div className=\"unique-modal-pwd\">\r\n    <h2>Change Password</h2>\r\n\r\n\r\n    <label>\r\n      New Password:\r\n      <input\r\n        type=\"password\"\r\n        value={newPassword}\r\n        onChange={e => setNewPassword(e.target.value)}\r\n        className=\"unique-input\"\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      Confirm New Password:\r\n      <input\r\n        type=\"password\"\r\n        value={confirmPassword}\r\n        onChange={e => setConfirmPassword(e.target.value)}\r\n        className=\"unique-input\"\r\n      />\r\n    </label>\r\n\r\n    {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n    <div className=\"unique-buttons\">\r\n      <button className='unique-submit' onClick={handleSubmit}>Submit</button>\r\n      <button  className = 'unique-submit' onClick={onClose} style={{ marginLeft: '10px' }}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}